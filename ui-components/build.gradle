plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.patrick.uicomponents'
    compileSdk 36

    defaultConfig {
        minSdk 24
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        // Kotlin 1.9.22 對應的 Compose Compiler
        kotlinCompilerExtensionVersion = "1.5.14"
    }
}

dependencies {
    implementation project(':shared-core')
    implementation project(':detection-logic')

    // AndroidX 基本
    implementation libs.core.ktx
    implementation libs.appcompat

    // Lifecycle
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.ktx

    // Compose（BOM + 各葉節點）
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.runtime
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.compose.material3

    // 測試
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    // CameraX（使用有版本的 camerax.* 別名）
    implementation libs.camerax.core
    implementation libs.camerax.camera2
    implementation libs.camerax.lifecycle
    implementation libs.camerax.view

    // ✅ MediaPipe Tasks（為了 com.google.mediapipe.*）
    // 若你的版本 catalog 沒有別名，就用直寫字串版本
    implementation "com.google.mediapipe:tasks-vision:0.10.14"
}
