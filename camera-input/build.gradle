plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.patrick.camera'
    compileSdk 36

    defaultConfig {
        minSdk 24
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = '17' }

    // 只有這個模組真的需要 Compose 才開
    buildFeatures { compose true }

    // 與 Kotlin 1.9.24 相容（取自版本表）
    composeOptions {
        kotlinCompilerExtensionVersion = libs.versions.composeCompiler.get()
    }
}

dependencies {
    // 其他模組
    implementation project(':shared-core')
    implementation project(':detection-logic')
    // ⚠️ 不要依賴 :ui-components，避免循環依賴（UI -> camera 再 -> UI）
    // implementation project(':ui-components')

    // Kotlin 協程
    implementation libs.kotlinx.coroutines.android

    // AndroidX 基礎 / Lifecycle
    implementation libs.core.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.ktx

    // Compose（用版本表的 BOM 與條目）
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.runtime
    implementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.compose.material3

    // CameraX
    implementation libs.camerax.core
    implementation libs.camerax.camera2
    implementation libs.camerax.lifecycle
    implementation libs.camerax.view

    // ✅ 若 import 有 com.google.common.util.concurrent.*（常見於 ProcessCameraProvider）
    implementation "androidx.concurrent:concurrent-futures-ktx:1.2.0"

    // ✅ 若此模組的檔案有 import com.google.mediapipe.*（例如 FaceLandmarkerResult）
    implementation libs.mediapipe.tasks.vision

    // 測試
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}
