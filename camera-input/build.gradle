plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.patrick.camera'
    compileSdk 36

    defaultConfig {
        minSdk 24
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }
}

dependencies {
    // 其他模組
    implementation project(':shared-core')
    implementation project(':ui-components')
    implementation project(':detection-logic')

    // Kotlin Coroutines（已在 catalog 定義）
    implementation libs.kotlinx.coroutines.android

    // AndroidX 基礎
    implementation libs.core.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.ktx   // ← 修正：加上 .ktx

    // Compose（直接座標，避免你再去加 catalog 條目）
    implementation platform("androidx.compose:compose-bom:2024.09.02")
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.material3:material3"

    // CameraX（使用我們在 catalog 定義好的別名）
    // 以前：implementation platform(libs.androidx.camera.bom)  ← 刪掉
    implementation libs.camerax.core
    implementation libs.camerax.camera2
    implementation libs.camerax.lifecycle
    implementation libs.camerax.view


    // （先移除）MediaPipe：如果這個模組真的用到再加回來，並指定版本
    // implementation "com.google.mediapipe:tasks-vision:<version>"

    // 測試
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}
